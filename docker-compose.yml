services:
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: ft_api
    working_dir: /app/apps/api
    volumes:
      #      - ./apps/api:/app/apps/api
      - games-data:/app/data
    environment:
      - PORT=4001
      - DB_DIR=/app/data
    expose:
      - 4001
    restart: always
    networks:
      - app_net

  game:
    build:
      context: .
      dockerfile: apps/game/Dockerfile
    container_name: ft_game
    expose:
      - 80
    restart: always
    networks:
      - app_net

  nginx:
    image: nginx:alpine
    container_name: ft_nginx
    depends_on:
      - api
      - game
    ports:
      - "${NGINX_PORT_HTTPS:-8443}:443"  # внешний 8443 -> внутр. 443 (HTTPS)
      - "${NGINX_PORT_HTTP:-8080}:80"    # внешний 8080 -> внутр. 80  (HTTP → редирект)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    networks:
      - app_net

  prometheus:
    image: prom/prometheus
    container_name: ft_prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - app_net

  grafana:
    image: grafana/grafana
    container_name: ft_grafana
    ports:
      - "3000:3000"
    networks:
      - app_net

  node-exporter:
    image: prom/node-exporter
    container_name: ft_node_exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - app_net

volumes:
  games-data:

networks:
  app_net:
    driver: bridge
