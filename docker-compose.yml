services:
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: ft_api
    working_dir: /app/apps/api
    volumes:
      #      - ./apps/api:/app/apps/api
      - games-data:/app/data
    environment:
      - PORT=4001
      - DB_DIR=/app/data
    expose:
      - 4001
    restart: always
    networks:
      - app_net

  game:
    build:
      context: .
      dockerfile: apps/game/Dockerfile
    container_name: ft_game
    expose:
      - 80
    restart: always
    networks:
      - app_net

  nginx:
    image: nginx:alpine
    container_name: ft_nginx
    depends_on:
      - api
      - game
    ports:
      - "${NGINX_PORT_HTTPS:-8443}:443"  # внешний 8443 -> внутр. 443 (HTTPS)
      - "${NGINX_PORT_HTTP:-8080}:80"    # внешний 8080 -> внутр. 80  (HTTP → редирект)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    networks:
      - app_net

  prometheus:
    image: prom/prometheus
    container_name: ft_prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
    ports:
      - "9090:9090"
    networks:
      - app_net

  grafana:
    image: grafana/grafana
    container_name: ft_grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/etc/grafana/dashboards:ro
    networks:
      - app_net


  node-exporter:
    image: prom/node-exporter
    container_name: ft_node_exporter
    restart: always
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
      # чуть чистим шумные ФС, чтобы не ругался
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|mqueue|overlay|proc|pstore|securityfs|selinuxfs|sysfs|tracefs)$'
    volumes:
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/:/host:ro'
    ports:
      - "${NODE_EXPORTER_PORT:-19100}:9100"
    networks:
      - app_net
  
  alertmanager:
    image: prom/alertmanager
    container_name: ft_alertmanager
    ports:
      - "${ALERTMANAGER_PORT:-19093}:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    networks:
      - app_net

volumes:
  games-data:

networks:
  app_net:
    driver: bridge
